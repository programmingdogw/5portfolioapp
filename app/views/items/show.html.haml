= stylesheet_link_tag 'items_show'

.pagecontainer

  -# ヘッダー
  .pagecontainer__itemshowheader
    = render 'home/humburger'
    .firststage
    =link_to image_tag('logo.png', alt: "ロゴ画像", class:"headerlogo"), root_path

  -# メイン
  .pagecontainer__itemshowcontents
    .itemname 
      ="商品名  #{@item.name}"
    .iteminfo
      .iteminfo__image
        = image_tag @item.images.first.image.url,  alt: '商品が投稿されていません', :size =>'350x350'
        %P 画像一覧
        - @item.images.each do |images|
          = image_tag images.image.url, size:"100x100" 

        
      .iteminfo__text
        .textinfowrapper
          .textinfowrapper__left 出品者
          .textinfowrapper__right
            = @user.nickname
        .textinfowrapper
          .textinfowrapper__left 親カテゴリ
          .textinfowrapper__right
            = @item.parentcategory
        .textinfowrapper
          .textinfowrapper__left 子カテゴリ
          .textinfowrapper__right
            = @child.name
        .textinfowrapper
          .textinfowrapper__left 孫カテゴリ
          .textinfowrapper__right
            = @grandchild.name
        .textinfowrapper
          .textinfowrapper__left ブランド
          -if @item.brand != nil
            .textinfowrapper__right
              = @item.brand
          -else
            .textinfowrapper__right
              = ""
        .textinfowrapper
          .textinfowrapper__left 商品サイズ
          .textinfowrapper__right
            = @size.name
        .textinfowrapper
          .textinfowrapper__left 商品の状態
          .textinfowrapper__right
            = @condition.name
        .textinfowrapper
          .textinfowrapper__left 配送料の負担
          .textinfowrapper__right
            = @deliverycost.name
        .textinfowrapper
          .textinfowrapper__left 発送元の地域
          .textinfowrapper__right
            = @item.delivery_from
        .textinfowrapper
          .textinfowrapper__left 発送日の目安
          .textinfowrapper__right
            = @deliverytime.name
        
        
      
    .itemcost
      ="商品代金    #{@price}円"


    -# 編集・削除・商品購入
    .purchase-or-edit-delete

      - if user_signed_in?
        - if @user == current_user
          -if @item.sold == false
            .edit-div
              = link_to '商品情報編集', edit_item_path(@item), class: "btnlink"
          .delete-div
            = link_to '商品削除', item_path(@item), method: :delete, class: "btnlink"
        - elsif @user != current_user
          .purchase-div
            %p.btnlink 商品購入 
            = form_with url: item_purchase_path(@item) do
              %script.payjp-button{"data-key" => Rails.application.credentials.payjp[:PAYJP_PUBLIC_KEY], src: "https://checkout.pay.jp", type: "text/javascript"}
        - else
          .extra-div
            %p これが表示されることはないはず
      - else
        %p.purchase-p 購入はログインしている方のみ行えます
        .purchase-login
          = link_to '購入（ログイン）', new_user_session_path, class: "btnlink"

    .simplebar

    -# 商品説明
    .itemexplanation
      .itemexplanation__title 商品説明
      .itemexplanation__content
        - text = @item.description
        = simple_format text
    .simplebar

    -# コメント
    .itemcomments
      - if current_user
        = form_with(model: [@item, @comment]) do |form|
          .itemcomments__wrapper
            = form.text_field :comment_content, placeholder: "コメントする", class: "commentform"
          = form.submit "送信", class:"submitbtn"
      - else
        %p.commentp  コメントを投稿するにはログインが必要です。 

      %p.commentp ＜コメント一覧＞
      - if @comments
        - @comments.each do |comment|
          %p.comments-indexp
            = link_to comment.user.nickname, "/users/#{comment.user_id}"
            ：
            = comment.comment_content

    


    


 


  
  
  -# フッター
  = render 'home/topfooter'
  
